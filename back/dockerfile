# syntax=docker/dockerfile:1

############################
# Base
############################
FROM node:22-slim AS base
WORKDIR /app

############################
# Deps (instala apenas o workspace "back")
############################
FROM base AS deps
# Dependências de sistema necessárias ao Prisma
RUN apt-get update && apt-get install -y --no-install-recommends openssl \
  && rm -rf /var/lib/apt/lists/*

# Habilita PNPM via Corepack
RUN corepack enable

# Copia MANIFESTOS da RAIZ (onde está o lock)
# Inclua pnpm-workspace.yaml se existir
COPY pnpm-lock.yaml package.json pnpm-workspace.yaml* ./

# Copia manifestos e prisma do serviço back
COPY back/package.json back/
COPY back/prisma back/prisma

# Instala SOMENTE para o back (com lockfile)
# (postinstall do back já rodará "prisma generate", pois prisma foi copiado)
RUN pnpm install --frozen-lockfile --filter ./back...

############################
# Build do back e poda das devDeps
############################
FROM deps AS build
# Copia configs + código do back
COPY back/tsconfig*.json back/nest-cli.json* back/
COPY back/src back/src

# Compila
RUN pnpm -C back run build

# Remove devDependencies SÓ do back
RUN pnpm -C back prune --prod

############################
# Runner (imagem final, leve)
############################
FROM node:22-slim AS runner
WORKDIR /app
ENV NODE_ENV=production

# runtime deps (Prisma + healthcheck)
RUN apt-get update && apt-get install -y --no-install-recommends openssl curl \
  && rm -rf /var/lib/apt/lists/*

# Copia SOMENTE o necessário do back
COPY --from=build /app/back/node_modules ./node_modules
COPY --from=build /app/back/dist ./dist
COPY --from=deps  /app/back/prisma ./prisma
COPY back/package.json ./package.json

EXPOSE 3000

# Healthcheck (ajuste a rota se for diferente)
HEALTHCHECK --interval=30s --timeout=3s --start-period=20s --retries=3 \
  CMD curl -fsS http://localhost:3000/health || exit 1

# Prisma está em dependencies no back, então o CLI existe no runtime
CMD ["sh","-c","npx prisma migrate deploy && node dist/main.js"]

