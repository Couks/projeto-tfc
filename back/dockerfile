# ------------ base ------------
  FROM node:22-slim AS base
  WORKDIR /app

  # Dependência de runtime do Prisma Client
  RUN apt-get update && apt-get install -y --no-install-recommends openssl \
    && rm -rf /var/lib/apt/lists/*

  # ------------ deps (prod deps + prisma client) ------------
  FROM base AS deps
  COPY package*.json ./
  COPY prisma ./prisma
  # Instala só as deps de produção e gera o Prisma Client nelas
  RUN npm ci --omit=dev \
   && npx prisma generate

  # ------------ builder (dev deps para compilar) ------------
  FROM base AS builder
  COPY package*.json ./
  RUN npm ci
  COPY tsconfig*.json nest-cli.json* ./
  COPY src ./src
  COPY public ./public
  COPY prisma ./prisma
  # Gera client para o ambiente de build também
  RUN npx prisma generate
  # Compila
  RUN npm run build
  # Se não usar o postbuild, copie manualmente os estáticos:
  # RUN mkdir -p dist/public/static && cp -r public/static/* dist/public/static/ || true

  # ------------ runner (imagem final) ------------
  FROM node:22-slim AS runner
  WORKDIR /app
  # Só runtime necessário para Prisma
  RUN apt-get update && apt-get install -y --no-install-recommends openssl \
    && rm -rf /var/lib/apt/lists/*

  ENV NODE_ENV=production
  ENV PORT=3001
  EXPOSE 3001

  # Copia node_modules de produção (com Prisma Client) e o build
  COPY --from=deps /app/node_modules ./node_modules
  COPY --from=builder /app/dist ./dist
  # (opcional) Copia schema para migrations em runtime (se você usa prisma migrate deploy via ação)
  COPY prisma ./prisma

  CMD ["node", "dist/main.js"]
