# syntax=docker/dockerfile:1

############################
# Base
############################
FROM node:22-slim AS base
WORKDIR /app

############################
# Deps - Instalação direta sem workspace
############################
FROM base AS deps
# Dependências de sistema necessárias ao Prisma
RUN apt-get update && apt-get install -y --no-install-recommends openssl libssl3 \
  && rm -rf /var/lib/apt/lists/*

# Copia apenas os arquivos do back (sem workspace)
COPY back/package.json ./
COPY back/prisma ./prisma

# Instala dependências diretamente (sem PNPM workspace)
RUN npm ci --only=production

# Instala Prisma CLI globalmente para garantir disponibilidade
RUN npm install -g prisma@5.17.0

# Gera o cliente Prisma
RUN npx prisma generate

############################
# Build
############################
FROM deps AS build
# Copia código fonte
COPY back/tsconfig*.json back/nest-cli.json* ./
COPY back/src ./src
COPY back/public ./public

# Instala devDependencies para build
RUN npm install

# Compila o código
RUN npm run build

# Remove devDependencies após build
RUN npm prune --omit=dev

############################
# Runner (imagem final)
############################
FROM node:22-slim AS runner
WORKDIR /app
ENV NODE_ENV=production

# Dependências de runtime
RUN apt-get update && apt-get install -y --no-install-recommends openssl curl \
  && rm -rf /var/lib/apt/lists/*

# Instala Prisma CLI globalmente
RUN npm install -g prisma@5.17.0

# Copia arquivos necessários
COPY --from=build /app/node_modules ./node_modules
COPY --from=build /app/dist ./dist
COPY --from=build /app/public ./public
COPY --from=deps /app/prisma ./prisma
COPY --from=deps /app/package.json ./package.json

EXPOSE 3001

# Healthcheck
HEALTHCHECK --interval=30s --timeout=3s --start-period=20s --retries=3 \
  CMD curl -fsS http://localhost:3001/api/health || exit 1

# Comando de inicialização
CMD ["sh","-c","prisma migrate deploy && node dist/main"]

